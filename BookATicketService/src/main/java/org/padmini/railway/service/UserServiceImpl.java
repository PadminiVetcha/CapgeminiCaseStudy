package org.padmini.railway.service;
import java.util.Objects;
import static org.springframework.data.mongodb.core.query.Query.*;
import static org.springframework.data.mongodb.core.query.Criteria.*;
import static org.springframework.data.mongodb.core.FindAndModifyOptions.*;
import org.padmini.railway.dao.UserRepository;
import org.padmini.railway.entity.DatabaseSequence;
import org.padmini.railway.entity.UserDetails;
import org.padmini.railway.exception.ResourceNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.core.query.Update;
//import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.stereotype.Service;

@Service
public class UserServiceImpl implements UserService 
{
	@Autowired
	UserRepository userRepo;
	
	@Autowired
	private static MongoOperations mongo;
	
	private UserServiceImpl(MongoOperations mongo) {
		this.mongo=mongo;
	}
	@Override
	public UserDetails getUserDetailsById(int id) {
		return userRepo.findById(id)
				.orElseThrow(()->new ResourceNotFoundException("No ticket is booked with id : "+ id));	
	}
	
	@Override
	public void addUserDetails(UserDetails userDetails) {
		userRepo.save(userDetails);	
	}
	//to get autogenerated id
	public static int getNextSequence(String key) {
		DatabaseSequence dbSeq=mongo.findAndModify(query(where("id").is(key)),
				new Update().inc("seq",1),
				options().returnNew(true).upsert(true),
				DatabaseSequence.class);
		return !Objects.isNull(dbSeq) ? dbSeq.getSeq() : 1;
	}
}
